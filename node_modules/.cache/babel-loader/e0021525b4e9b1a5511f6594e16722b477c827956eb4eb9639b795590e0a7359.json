{"ast":null,"code":"/*\n * Copyright 2009 The Closure Library Authors\n * Copyright 2020 Daniel Wirtz / The long.js Authors.\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// Original version by long.js: https://github.com/dcodeIO/long.js/\nvar TWO_PWR_32 = (1 << 16) * (1 << 16);\nvar UnsignedLong = /** @class */function () {\n  function UnsignedLong(low, high) {\n    this.low = low;\n    this.high = high;\n  }\n  UnsignedLong.fromU32 = function (value) {\n    return new UnsignedLong(value % TWO_PWR_32 | 0, 0);\n  };\n  UnsignedLong.prototype.multiply = function (value) {\n    var a48 = this.high >>> 16;\n    var a32 = this.high & 0xffff;\n    var a16 = this.low >>> 16;\n    var a00 = this.low & 0xffff;\n    var b48 = value.high >>> 16;\n    var b32 = value.high & 0xffff;\n    var b16 = value.low >>> 16;\n    var b00 = value.low & 0xffff;\n    var c48 = 0;\n    var c32 = 0;\n    var c16 = 0;\n    var c00 = 0;\n    c00 += a00 * b00;\n    c16 += c00 >>> 16;\n    c00 &= 0xffff;\n    c16 += a16 * b00;\n    c32 += c16 >>> 16;\n    c16 &= 0xffff;\n    c16 += a00 * b16;\n    c32 += c16 >>> 16;\n    c16 &= 0xffff;\n    c32 += a32 * b00;\n    c48 += c32 >>> 16;\n    c32 &= 0xffff;\n    c32 += a16 * b16;\n    c48 += c32 >>> 16;\n    c32 &= 0xffff;\n    c32 += a00 * b32;\n    c48 += c32 >>> 16;\n    c32 &= 0xffff;\n    c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;\n    c48 &= 0xffff;\n    return new UnsignedLong(c16 << 16 | c00, c48 << 16 | c32);\n  };\n  UnsignedLong.prototype.add = function (value) {\n    var a48 = this.high >>> 16;\n    var a32 = this.high & 0xffff;\n    var a16 = this.low >>> 16;\n    var a00 = this.low & 0xffff;\n    var b48 = value.high >>> 16;\n    var b32 = value.high & 0xffff;\n    var b16 = value.low >>> 16;\n    var b00 = value.low & 0xffff;\n    var c48 = 0;\n    var c32 = 0;\n    var c16 = 0;\n    var c00 = 0;\n    c00 += a00 + b00;\n    c16 += c00 >>> 16;\n    c00 &= 0xffff;\n    c16 += a16 + b16;\n    c32 += c16 >>> 16;\n    c16 &= 0xffff;\n    c32 += a32 + b32;\n    c48 += c32 >>> 16;\n    c32 &= 0xffff;\n    c48 += a48 + b48;\n    c48 &= 0xffff;\n    return new UnsignedLong(c16 << 16 | c00, c48 << 16 | c32);\n  };\n  UnsignedLong.fromString = function (str) {\n    var result = UnsignedLong.fromU32(0);\n    for (var i = 0; i < str.length; i += 8) {\n      var size = Math.min(8, str.length - i);\n      var value = parseInt(str.substring(i, i + size));\n      if (size < 8) {\n        var power = UnsignedLong.fromU32(Math.pow(10, size));\n        result = result.multiply(power).add(UnsignedLong.fromU32(value));\n      } else {\n        result = result.multiply(UnsignedLong.fromU32(100000000));\n        result = result.add(UnsignedLong.fromU32(value));\n      }\n    }\n    return result;\n  };\n  return UnsignedLong;\n}();\nexport { UnsignedLong };","map":{"version":3,"names":["TWO_PWR_32","UnsignedLong","low","high","fromU32","value","prototype","multiply","a48","a32","a16","a00","b48","b32","b16","b00","c48","c32","c16","c00","add","fromString","str","result","i","length","size","Math","min","parseInt","substring","power","pow"],"sources":["/Users/victorhorton/Code/openTelemettry/front-end/node_modules/@opentelemetry/otlp-transformer/src/common/unsigned_long.ts"],"sourcesContent":["/*\n * Copyright 2009 The Closure Library Authors\n * Copyright 2020 Daniel Wirtz / The long.js Authors.\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// Original version by long.js: https://github.com/dcodeIO/long.js/\n\nconst TWO_PWR_32 = (1 << 16) * (1 << 16);\n\nexport class UnsignedLong {\n  low: number;\n  high: number;\n\n  constructor(low: number, high: number) {\n    this.low = low;\n    this.high = high;\n  }\n\n  static fromU32(value: number): UnsignedLong {\n    return new UnsignedLong(value % TWO_PWR_32 | 0, 0);\n  }\n\n  multiply(value: UnsignedLong): UnsignedLong {\n    const a48 = this.high >>> 16;\n    const a32 = this.high & 0xffff;\n    const a16 = this.low >>> 16;\n    const a00 = this.low & 0xffff;\n\n    const b48 = value.high >>> 16;\n    const b32 = value.high & 0xffff;\n    const b16 = value.low >>> 16;\n    const b00 = value.low & 0xffff;\n\n    let c48 = 0;\n    let c32 = 0;\n    let c16 = 0;\n    let c00 = 0;\n    c00 += a00 * b00;\n    c16 += c00 >>> 16;\n    c00 &= 0xffff;\n    c16 += a16 * b00;\n    c32 += c16 >>> 16;\n    c16 &= 0xffff;\n    c16 += a00 * b16;\n    c32 += c16 >>> 16;\n    c16 &= 0xffff;\n    c32 += a32 * b00;\n    c48 += c32 >>> 16;\n    c32 &= 0xffff;\n    c32 += a16 * b16;\n    c48 += c32 >>> 16;\n    c32 &= 0xffff;\n    c32 += a00 * b32;\n    c48 += c32 >>> 16;\n    c32 &= 0xffff;\n    c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;\n    c48 &= 0xffff;\n\n    return new UnsignedLong((c16 << 16) | c00, (c48 << 16) | c32);\n  }\n\n  add(value: UnsignedLong): UnsignedLong {\n    const a48 = this.high >>> 16;\n    const a32 = this.high & 0xffff;\n    const a16 = this.low >>> 16;\n    const a00 = this.low & 0xffff;\n\n    const b48 = value.high >>> 16;\n    const b32 = value.high & 0xffff;\n    const b16 = value.low >>> 16;\n    const b00 = value.low & 0xffff;\n\n    let c48 = 0;\n    let c32 = 0;\n    let c16 = 0;\n    let c00 = 0;\n    c00 += a00 + b00;\n    c16 += c00 >>> 16;\n    c00 &= 0xffff;\n    c16 += a16 + b16;\n    c32 += c16 >>> 16;\n    c16 &= 0xffff;\n    c32 += a32 + b32;\n    c48 += c32 >>> 16;\n    c32 &= 0xffff;\n    c48 += a48 + b48;\n    c48 &= 0xffff;\n\n    return new UnsignedLong((c16 << 16) | c00, (c48 << 16) | c32);\n  }\n\n  static fromString(str: string): UnsignedLong {\n    let result = UnsignedLong.fromU32(0);\n\n    for (let i = 0; i < str.length; i += 8) {\n      const size = Math.min(8, str.length - i);\n      const value = parseInt(str.substring(i, i + size));\n      if (size < 8) {\n        const power = UnsignedLong.fromU32(Math.pow(10, size));\n        result = result.multiply(power).add(UnsignedLong.fromU32(value));\n      } else {\n        result = result.multiply(UnsignedLong.fromU32(100_000_000));\n        result = result.add(UnsignedLong.fromU32(value));\n      }\n    }\n\n    return result;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}